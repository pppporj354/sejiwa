version: "3.8"

services:
  # Service Backend (Go API)
  api:
    build:
      context: .
      dockerfile: Dockerfile # Dockerfile untuk backend
    container_name: sejiwa-api
    restart: unless-stopped
    env_file:
      - .env # Mengambil environment variables dari file .env
    depends_on:
      - db
    networks:
      - sejiwa-net

  # Service Database (PostgreSQL)
  db:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    container_name: sejiwa-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: sejiwa
      POSTGRES_PASSWORD: sejiwa
      POSTGRES_DB: sejiwa
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sejiwa-net

  # Service Frontend (disajikan oleh Nginx)
  nginx:
    image: nginx:stable-alpine
    container_name: sejiwa-nginx
    restart: unless-stopped
    ports:
      - "80:80" # Map port 80 host ke 80 kontainer
      - "443:443" # Map port 443 host ke 443 kontainer
    volumes:
      # Volume untuk hasil build frontend
      - ./frontend/dist:/usr/share/nginx/html
      # Volume untuk konfigurasi Nginx
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      # Volume untuk sertifikat SSL dari Certbot di host
      - /etc/letsencrypt:/etc/letsencrypt:ro
      # Volume untuk proses renewal Certbot
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - api
    networks:
      - sejiwa-net

# Jaringan internal untuk komunikasi antar kontainer
networks:
  sejiwa-net:
    driver: bridge

# Volume untuk persistensi data database
volumes:
  postgres_data:
    driver: local

version: "3.8"

services:
  # Service untuk backend API yang dibuat dengan Go
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sejiwa-api
    restart: unless-stopped
    env_file:
      - .env # Mengambil konfigurasi dari file .env
    environment:
      # Mengizinkan koneksi dari domain frontend Anda
      - CORS_ALLOWED_ORIGINS=https://horus.my.id
    depends_on:
      - db # Service ini baru akan jalan setelah service 'db' siap
    networks:
      - sejiwa-net # Terhubung ke jaringan internal

  # Service untuk Database PostgreSQL
  db:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    container_name: sejiwa-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: sejiwa
      POSTGRES_PASSWORD: sejiwa
      POSTGRES_DB: sejiwa
    volumes:
      - postgres_data:/var/lib/postgresql/data # Menyimpan data database secara permanen
    networks:
      - sejiwa-net

  # Service untuk Frontend (Nginx yang menyajikan file React)
  nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    container_name: sejiwa-nginx # Nama ini PENTING untuk reverse proxy
    restart: unless-stopped
    # TIDAK ADA 'ports' di sini karena akses akan melalui reverse proxy utama
    depends_on:
      - api
    networks:
      - sejiwa-net # Terhubung ke jaringan internal untuk bicara dengan 'api'
      - nginx-proxy # Terhubung ke jaringan eksternal agar bisa ditemukan oleh reverse proxy

networks:
  sejiwa-net:
    driver: bridge
  nginx-proxy:
    external: true # Menggunakan jaringan yang sudah kita buat sebelumnya

volumes:
  postgres_data:
    driver: local
